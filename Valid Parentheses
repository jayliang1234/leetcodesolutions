#include<unordered_map>
#include<stack>
class Solution {
public:
    bool isValid(string s) {
        stack<char> stack;
        unordered_map<char,char>closetoopen;
        closetoopen['(']= ')';
        closetoopen['[']= ']';
        closetoopen['{']= '}';
        for(int i = 0;i<s.length();i++){
            if(s[i]==')'||s[i]==']'||s[i]=='}'){
                if(stack.empty()){
                    return false;
                }
                else if(s[i]==closetoopen[stack.top()]){
                    stack.pop();
                }
                else
                    return false;
            }
            else
                stack.push(s[i]);
        }
        if(stack.empty()){
            return true;
        }
        else
            return false;
    }
};

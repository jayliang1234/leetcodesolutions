class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> map;
        vector<int>unique;
        vector<int> feq;
        vector<int>topK;
        for(int i = 0; i < nums.size(); i++){ //stores frequency of each number in a map and also creates a vector of unique numbers of nums
            map[nums[i]]++;
            if(std::find(unique.begin(), unique.end(), nums[i])!=unique.end()){ //if we find the number in unique vector do nothing
            }
            else{
                unique.push_back(nums[i]);
            }
        }
        for(int i =0; i< unique.size();i++){ //create a vector of the frequencys
            feq.push_back(map[unique[i]]);
        }
        sort(feq.begin(), feq.end(), greater<int>());
        for(int i =0; i<k;i++){
            for(auto & elm:map){
                if(elm.second == feq[i]){
                    topK.push_back(elm.first);
                    map.erase(elm.first);
                    break;
                }
            }
        }
        return topK;
    }
};
